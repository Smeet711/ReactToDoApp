{"version":3,"sources":["components/todoreact/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","useState","inputdata","setinputdata","list","localStorage","getItem","JSON","parse","getLocalData","items","setitems","editItem","seteditItem","togglebtn","settogglebtn","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","value","onChange","event","target","placeholder","onClick","index","item_todo_edited","find","editItemtodo","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAkKeA,EAlJF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAbP,WACnB,IAAMG,EAAOC,aAAaC,QAAQ,UAElC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAO0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAIMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAEtBgB,MAGXf,EAAa,IACbU,EAAY,MACZE,GAAa,OACR,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,qBAqEV,OANAC,qBAAU,WACRrB,aAAasB,QAAQ,SAAUpB,KAAKqB,UAAUlB,MAC7C,CAACA,IAKF,mCACE,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAI,cAAcC,IAAI,aAC3B,kEAGF,sBAAKF,UAAU,WAAf,UACE,uBACEG,KAAK,OACLZ,KAAK,GACLD,GAAG,GACHc,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAWhC,EAAagC,EAAMC,OAAOH,QAC/CJ,UAAU,eACVQ,YAAY,sBAEbvB,EACC,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAM/C,qBAAKa,UAAU,YAAf,SACGnB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKW,UAAU,WAAf,UACE,6BAAKX,EAAQE,OAEb,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVS,QAAS,kBA1DR,SAACC,GACpB,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACnC,OAAOA,EAAQC,KAAOoB,KAExBpC,EAAaqC,EAAiBpB,MAC9BP,EAAY0B,GACZxB,GAAa,GAoDoB2B,CAAaxB,EAAQC,OAEtC,mBACEU,UAAU,2BACVS,QAAS,kBApFV,SAACC,GAClB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GACjC,OAAOA,EAAQC,KAAOoB,KAExB5B,EAASgC,GAgFwBE,CAAW3B,EAAQC,OAPtC,SAH6BD,EAAQC,SAqB7C,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBS,QArFM,WAChB3B,EAAS,KAiFD,SAKE,0DC9ICmC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5136f52.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n// get the localstorage data and display it\r\n\r\nconst getLocalData = () => {\r\n  const list = localStorage.getItem(\"mytodo\");\r\n\r\n  if (list) {\r\n    return JSON.parse(list);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n//\r\n//\r\nconst ToDo = () => {\r\n  const [inputdata, setinputdata] = useState(\"\");\r\n  const [items, setitems] = useState(getLocalData());\r\n  const [editItem, seteditItem] = useState(\"\");\r\n  const [togglebtn, settogglebtn] = useState(false);\r\n\r\n  //add the item function\r\n\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"Please add ToDO \");\r\n    } else if (inputdata && togglebtn) {\r\n      setitems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === editItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n      setinputdata(\"\");\r\n      seteditItem(null);\r\n      settogglebtn(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setitems([...items, myNewInputData]);\r\n      setinputdata(\"\");\r\n    }\r\n  };\r\n  //\r\n  // to delete to do\r\n  //\r\n\r\n  const deleteItem = (index) => {\r\n    const updatedItems = items.filter((curElem) => {\r\n      return curElem.id !== index;\r\n    });\r\n    setitems(updatedItems);\r\n  };\r\n\r\n  //\r\n  //\r\n  //  to remove all from todo function\r\n  //\r\n  //\r\n  //\r\n\r\n  const removeAll = () => {\r\n    setitems([]);\r\n  };\r\n\r\n  //\r\n  // edit the todo function\r\n  //\r\n\r\n  const editItemtodo = (index) => {\r\n    const item_todo_edited = items.find((curElem) => {\r\n      return curElem.id === index;\r\n    });\r\n    setinputdata(item_todo_edited.name);\r\n    seteditItem(index);\r\n    settogglebtn(true);\r\n  };\r\n\r\n  //\r\n  //\r\n  // Adding to Local Storage Logic\r\n  //\r\n  //\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytodo\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  //\r\n  //\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src=\"../todo.svg\" alt=\"todologo\" />\r\n            <figcaption>Add Your ToDo Here...</figcaption>\r\n          </figure>\r\n\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              id=\"\"\r\n              value={inputdata}\r\n              onChange={(event) => setinputdata(event.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Type ToDo List...\"\r\n            />\r\n            {togglebtn ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n\r\n          {/* show our items  */}\r\n\r\n          <div className=\"showItems\">\r\n            {items.map((curElem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name}</h3>\r\n\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItemtodo(curElem.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}\r\n                    ></i>\r\n                    ]\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* remove all button */}\r\n\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"REMOVE ALL\"\r\n              onClick={removeAll}\r\n            >\r\n              <span>CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import \"./App.css\";\nimport ToDo from \"./components/todoreact/ToDo\";\n\nfunction App() {\n  return (\n    <>\n      <ToDo />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}